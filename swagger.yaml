tags:
- name: users
  description: users API
- name: bookings
  description: bookings API

paths:
# [GET] users
  /users:
    get:
      tags:
      - users
      summary: Find All Users
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

# [POST] users
    post:
      tags:
      - users
      summary: Add User
      parameters:
      - name: body
        in: body
        description: user Data
        required: true
        schema:
          $ref: '#/definitions/users'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [GET] users/id
  /users/{id}:
    get:
      tags:
      - users
      summary: Find User By Id
      parameters:
      - name: id
        in: path
        description: User Id
        required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [PUT] users/id
    put:
      tags:
      - users
      summary: Update User By Id
      parameters:
      - name: id
        in: path
        description: user Id
        required: true
      - name: body
        in: body
        description: user Data
        required: true
        schema:
          $ref: '#/definitions/users'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [DELETE] users/id
    delete:
      tags:
      - users
      summary: Delete User By Id
      parameters:
      - name: id
        in: path
        description: user Id
        required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [GET] bookings
  /bookings:
    get:
      tags:
      - bookings
      summary: Find All Bookings
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

# [POST] bookings
    post:
      tags:
      - bookings
      summary: Add Bookings
      parameters:
      - name: body
        in: body
        description: bookings Data
        required: true
        schema:
          $ref: '#/definitions/bookings'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [GET] users/id
  /bookings/{id}:
    get:
      tags:
      - bookings
      summary: Find Booking By Id
      parameters:
      - name: id
        in: path
        description: booking Id
        required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [PUT] users/id
    put:
      tags:
      - bookings
      summary: Update Booking By Id
      parameters:
      - name: id
        in: path
        description: booking Id
        required: true
      - name: body
        in: body
        description: booking Data
        required: true
        schema:
          $ref: '#/definitions/bookings'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [DELETE] users/id
    delete:
      tags:
      - bookings
      summary: Delete Booking By Id
      parameters:
      - name: id
        in: path
        description: booking Id
        required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'


# definitions
definitions:
  users:
    type: object
    required:
        - email
        - password
    properties:
      id:
        type: string
        description: user Id
      email:
        type: string
        description: user Email
      password:
        type: string
        description: user Password
      role:
        type: string
        description: user role
      name:
        type: string
        description: user name
      tel:
        type: string
        description: user telephone number
      booking:
        type: array
        items:
          type: string
          description: id of user booking
  bookings:
    type: object
    required:
        - checkIn
        - checkOut
    properties:
      id:
        type: string
        description: booking Id
      hotel:
        type: string
        description: hotel id 
      user:
        type: string
        description: user id
      checkIn:
        type: string
        description: check-in date
      checkOut:
        type: string
        description: checl-out date
schemes:
 - https
 - http
